# .github/workflows/deploy.yml
name: Frontend Deploy to WebHostMost

on:
  push:
    branches:
      - master # 确保只在主分支上推送代码时触发部署

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 确保与你的项目兼容的 Node.js 版本

      - name: Install dependencies
        run: npm install
        
      - name: Build React App with Vite
        run: npm run build
        
      - name: 部署前端文件到服务器
        # ⚠️ 注意：v0.1.7 默认使用 rsync 时，对 source 的处理可能不一致。
        uses: appleboy/scp-action@v0.1.7
        with:
          # ... (其他配置保持不变)
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 2323 
          
          # 【关键修改 1】：source 只需要指定要复制的目录名
          # rsync 默认会处理这个目录，我们通过 options 来控制行为。
          source: 'dist' 
          
          # 【关键修改 2】：target 目录后面必须带斜杠 '/' 
          # 这告诉 rsync 将源内容复制到目标目录的“内部”。
          target: ${{ secrets.DEPLOY_PATH }}/ 
          
          rsync: true
          overwrite: true
          
          # 【关键修改 3】：使用 --include='.*' 和 --exclude='*' 
          # 这是一个 rsync 的高级技巧，用来确保隐藏文件被包含，但 *不* 复制顶级目录本身。
          # 但是，最简单可靠的方式是使用 -rltDvz 选项。
          # 让我们尝试最稳定的 rsync 选项组合：
          rsync_options: -rltDvz --delete
          
      - name: 部署完成
        run: echo "🎉 前端部署已完成，请检查你的 WebHostMost 域名。"